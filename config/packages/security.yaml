security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_ADMIN_NAT: ROLE_ADMIN
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: mail



    firewalls:
        dev:
            pattern: ^/_(profiler|wdt)
            security: false
        api:
            pattern: ^/api/
            stateless: true
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        accueil:
            pattern : ^/accueil/
            stateless: true
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        refresh:
            pattern:  ^/refresh
            stateless: true
            anonymous: true
        main:
            anonymous: true
            json_login:
                check_path: /login
                username_path: mail
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            logout:
                path: /logout
                invalidate_session: true
    access_control:
        - { path: ^/api/viviers, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/utilisateurs, roles: ROLE_ADMIN, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/viviers, roles: ROLE_ADMIN, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/semaines, roles: ROLE_USER, methods: [GET] }
        - { path: ^/api/jour_feries, roles: ROLE_USER, methods: [GET] }
        - { path: ^/api/astreintes, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/entites, roles: ROLE_ADMIN, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/interventions, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/payes, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/rapports, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/repos, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/retours, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/semaines, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api/remplacements, roles: ROLE_USER, methods: [POST, PUT, GET, DELETE] }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/accueil/semaines, roles: ROLE_USER }
        - { path: ^/logout, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/accueil/astreinte, roles: ROLE_USER, methods: [GET] }
        - { path: ^/accueil/astreinte/xls, roles: ROLE_USER, methods: [GET] }
        - { path: ^/accueil/add/astreinte, roles: ROLE_USER, methods: [POST] }
        - { path: ^/api/addUser, roles: ROLE_ADMIN, methods: [POST] }
        - { path: ^/api/user/vivier, roles: ROLE_ADMIN, methods: [POST] }
        - { path: ^/api/role, roles: ROLE_ADMIN, methods: [GET] }
        - { path: ^/api/addVivier, roles: ROLE_ADMIN, methods: [POST] }

